{"ast":null,"code":"var _jsxFileName = \"/Users/damquocdung/Desktop/rdxSwap_main/rdxswap_web/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { useWeb3React } from '@web3-react/core';\nimport { Injected } from './connectors';\nimport { getContract } from './utils/getContract';\nimport { PoolPair } from './utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  parseUnits\n} = require(\"ethers/lib/utils\");\n\nfunction App() {\n  _s();\n\n  const addLiquidityInput = ['rdxExpect', 'wjkExpect', 'rdxMin', 'wjkMin'];\n  const listInputAddLiquidity = addLiquidityInput.map(e => {\n    let labelName = e === 'rdxExpect' ? 'RDX expect' : e === 'wjkExpect' ? 'WJK expect' : e === 'rdxMin' ? 'RDX min' : e === 'wjkMin' ? 'WJK Min' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: labelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          marginRight: 10,\n          width: 100\n        },\n        type: \"number\",\n        onChange: e => console.log(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n  const removeLiquidityInput = ['lpBurn', 'rdxOutMin', 'wjkOutMin'];\n  const listInputRemoveLiquidity = removeLiquidityInput.map(e => {\n    let labelName = e === 'lpBurn' ? 'LP amount' : e === 'rdxOutMin' ? 'RDX min back' : e === 'wjkOutMin' ? 'WJK min back' : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: labelName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          marginRight: 10,\n          width: 100\n        },\n        type: \"number\",\n        onChange: e => console.log(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  });\n  let [userAccount, setUserAccount] = useState('');\n  let [userRDXBal, setUserRDXBal] = useState(0);\n  let [userWJKBal, setUserWJKBal] = useState(0);\n  let [userRDLPBal, setRDLPBal] = useState(0); // let [rdxAllowance, setRdxAllowance] = useState<any>(0)\n  // let [wjkAllowance, setWjkAllowance] = useState<any>(0)\n\n  const {\n    activate,\n    account\n  } = useWeb3React();\n\n  const connectWallet = async () => {\n    await activate(Injected);\n  };\n\n  const mintRDX = async () => {\n    const contract = await getContract('RDX');\n\n    if (contract != null) {\n      try {\n        const mint = await contract.mint();\n        alert('mint RDX successs wait for 30 second to see balance update');\n        await mint.wait();\n        await getRDXBal();\n      } catch (error) {\n        alert('mint RDX cause crash by system');\n      }\n    } else alert('get RDX contract failed');\n  };\n\n  const mintWJK = async () => {\n    const contract = await getContract('WJK');\n\n    if (contract != null) {\n      try {\n        const mint = await contract.mint();\n        alert('mint WJK success wait for 30 second to see balance update');\n        await mint.wait();\n        await getWJKBal();\n      } catch (error) {\n        alert('mint WJK cause crash by system');\n      }\n    } else alert('get WJK contract failed');\n  };\n\n  const getRDXBal = async () => {\n    const contract = await getContract('RDX');\n\n    if (contract != null) {\n      try {\n        const bal = parseInt(await contract.balanceOf(userAccount)) / 10 ** 12;\n        setUserRDXBal(bal);\n      } catch (error) {\n        alert('get RDX balance cause crash by system');\n      }\n    } else alert('get RDX contract failed');\n  };\n\n  const getWJKBal = async () => {\n    const contract = await getContract('WJK');\n\n    if (contract != null) {\n      try {\n        const bal = parseInt(await contract.balanceOf(userAccount)) / 10 ** 12;\n        setUserWJKBal(bal);\n      } catch (error) {\n        alert('get WJK balance cause crash by system');\n      }\n    } else alert('get WJK contract failed');\n  };\n\n  const getRDLPBal = async () => {\n    const contract = await getContract('POO');\n\n    if (contract != null) {\n      try {\n        const bal = parseInt(await contract.balanceOf(userAccount)) / 10 ** 12;\n        setRDLPBal(bal);\n      } catch (error) {\n        alert('get RDLP Balance cause crash by system');\n      }\n    } else alert('get PoolPair contract failed');\n  };\n\n  const getRDXAllowance = async () => {\n    const contract = await getContract('RDX');\n\n    if (contract != null) {\n      try {\n        const bal = parseInt(await contract.allowance(userAccount, PoolPair.contractAddress)) / 10 ** 12;\n        return bal; // setRdxAllowance(bal)\n      } catch (error) {\n        alert('get RDX allowance cause crash by systems');\n      }\n    }\n\n    alert('get RDX contract faied');\n  };\n\n  const getWJKAllowance = async () => {\n    const contract = await getContract('WJK');\n\n    if (contract != null) {\n      try {\n        const bal = parseInt(await contract.allowance(userAccount, PoolPair.contractAddress)) / 10 ** 12;\n        return bal; // setWjkAllowance(bal)\n      } catch (error) {\n        alert('get RDX allowance cause crash by systems');\n      }\n    }\n\n    alert('get RDX contract faied');\n  };\n\n  const [rdxExpect, setRdxExpect] = useState(0);\n  const [wjkExpect, setWjkExpect] = useState(0);\n  const [rdxMin, setRdxMin] = useState(0);\n  const [wjkMin, setWjkMin] = useState(0);\n\n  const addLiquidity = async () => {};\n\n  const removeLiquidity = async () => {}; // const getUserUNIBal = async () => {\n  //   const contract = await getContract('UNI')\n  //   if (contract != null) {\n  //     try {\n  //       const balance = await contract.balanceOf(userAccount)\n  //       setUserUNIBal(parseInt(balance.toString()) / 10 ** 12)\n  //     } catch (error) {\n  //       alert('get user UNI balance cause crash by system')\n  //     }\n  //   } else alert('get UNI contract failed')\n  // }\n  // const getUserRDXBal = async () => {\n  //   const contract = await getContract('RDX')\n  //   if (contract != null && userAccount) {\n  //     try {\n  //       const balance = await contract.balanceOf(userAccount)\n  //       setUserRDXBal(parseInt(balance.toString()) / 10 ** 12)\n  //     } catch (error) {\n  //       alert('get user RDX balance cause crash by system')\n  //     }\n  //   } else alert('get RDX contract failed')\n  // }\n  // const getUniAllowBalance = async () => {\n  //   const contract = await getContract('UNI')\n  //   if (contract != null && userAccount) {\n  //     try {\n  //       const allowBalance = await contract.allowance(userAccount, MasterChef.contractAddress)\n  //       const currentBalance = await contract.balanceOf(userAccount)\n  //       const availableAmount = (currentBalance - allowBalance >= 0) ? allowBalance : currentBalance\n  //       setUniAllowBal(parseInt((availableAmount / 10 ** 12).toString()))\n  //     } catch (error) {\n  //       alert('get uni allow balance cause crash by system')\n  //     }\n  //   } else alert('get UNI contract failed')\n  // }\n  // const getUniDepositBalance = async () => {\n  //   const contract = await getContract('MSC')\n  //   if (contract != null) {\n  //     try {\n  //       const balance = await contract.getUserAmountDeposit('uni')\n  //       setUniBalance(parseInt(balance.toString()) / 10 ** 12)\n  //     } catch (error) {\n  //       alert('get UNI deposit balance cause crash from system')\n  //     }\n  //   } else alert('get MSC contract failed in getUniDepositBal')\n  // }\n  // const getRDXPending = async () => {\n  //   const contract = await getContract('MSC')\n  //   if (contract != null) {\n  //     const RDXPending = await contract.pendingRedDot('uni', userAccount)\n  //     setRDXPending(parseInt(RDXPending.toString()) / 10 ** 12)\n  //   } else alert('get MSC contract failed in getRDXPending')\n  // }\n  // const [uniAllowAmount, setUniAllowAmount] = useState<any>(0)\n  // const approveUni = async () => { // should require userAccount\n  //   const uniContract = await getContract('UNI')\n  //   if (uniContract != null) {\n  //     try {\n  //       const approveSuccess = await uniContract.approve(MasterChef.contractAddress, parseUnits(uniAllowAmount.toString(), 12))\n  //       await approveSuccess.wait()\n  //       if (approveSuccess) {\n  //         alert('please wait about 30-45 seconds to deposit Uni')\n  //       }\n  //     } catch (error) {\n  //       alert('approve Uni cause crash by system')\n  //     }\n  //   } else alert('get UNI contract failed')\n  // }\n  // const [uniDepositAmount, setUniDepositAmount] = useState<any>(0)\n  // const depositUni = async () => {\n  //   if (!userAccount) {\n  //     alert('please connect your meta mask wallet before do this stuff')\n  //     return\n  //   }\n  //   const mscContract = await getContract('MSC')\n  //   const uniContract = await getContract('UNI')\n  //   if (mscContract != null && uniContract != null) {\n  //     try {\n  //       const availableUniToDeposit = await uniContract.allowance(userAccount, MasterChef.contractAddress)\n  //       if (parseInt((availableUniToDeposit / 10 ** 12).toString()) >= uniDepositAmount) {\n  //         const tx = await mscContract.deposit('uni', parseUnits(uniDepositAmount.toString(), 12))\n  //         tx?.wait();\n  //         alert('deposit success')\n  //       } else {\n  //         alert('your balance is insufficient')\n  //       }\n  //     } catch (error) {\n  //       alert('deposit uni cause crash by system')\n  //     }\n  //   } else alert('get MSC or UNI contract failed in deposit')\n  // }\n  // const [uniWithdrawAmount, setUniWithdrawAmount] = useState<any>(0)\n  // const withdrawUni = async () => {\n  //   const mscContract = await getContract('MSC')\n  //   if (mscContract != null) {\n  //     const availableAmount = await mscContract.getUserAmountDeposit('uni')\n  //     if (uniWithdrawAmount - (parseInt(availableAmount.toString()) / 10 ** 12) <= 0) {\n  //       try {\n  //         await mscContract.withdraw('uni', parseUnits(uniWithdrawAmount.toString(), 12))\n  //         alert('withdraw success wait 45-60 seconds to receive uni')\n  //       } catch (error) {\n  //         alert('withdraw Uni cause crash by system')\n  //       }\n  //     } else {\n  //       alert('withdraw not good')\n  //     }\n  //   } else alert('get MSC contract failed in withdraw')\n  // }\n  // const [claimRewardAmount, setClaimRewardAmount] = useState<any>(0)\n  // const claimReward = async () => {\n  //   const mscContract = await getContract('MSC')\n  //   if (mscContract != null) {\n  //     try {\n  //       const pendingRDX = await mscContract.pendingRedDot('uni', userAccount)\n  //       let claimAmountInSol = parseUnits(claimRewardAmount.toString(), 12)\n  //       if (pendingRDX - claimAmountInSol >= 0) {\n  //         debugger\n  //         await mscContract.claimReward('uni', parseUnits(claimRewardAmount.toString(), 12))\n  //         debugger\n  //         alert('claim reward success wait 45-60 secons to receive reward')\n  //       } else {\n  //         alert('insufficinent balalnce')\n  //       }\n  //     } catch (error) {\n  //       console.log(error)\n  //       alert('claim reward cause crash by system')\n  //     }\n  //   } else alert('get MSC contract failed in claim reward')\n  // }\n  // const mintUni = async () => {\n  //   const uniContract = await getContract('UNI')\n  //   if (uniContract != null) {\n  //     try {\n  //       await uniContract.mint(userAccount, parseUnits('1000', 12))\n  //       alert('mint success wait for 30-45 second to get uni token')\n  //     } catch (error) {\n  //       alert('mint Uni casue crash by system')\n  //     }\n  //   } else {\n  //     alert('get uni contract failed')\n  //   }\n  // }\n\n\n  useEffect(() => {\n    if (userAccount) {\n      getRDXBal();\n      getWJKBal();\n      getRDLPBal();\n    }\n  }, [userAccount]);\n  useEffect(() => {\n    if (account) {\n      setUserAccount(account);\n\n      if (window.localStorage.getItem('userAccount') !== account) {\n        window.localStorage.setItem('userAccount', account);\n      }\n    }\n  }, [account]);\n  useEffect(() => {\n    if (window.localStorage.getItem('userAccount')) {\n      connectWallet();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      flexDirection: 'row',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: 200,\n        padding: 50,\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'blue',\n              marginRight: 25\n            },\n            children: \"Add Liquidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: listInputAddLiquidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: 30,\n            width: 60,\n            marginTop: 20\n          },\n          type: \"button\",\n          onClick: addLiquidity,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: 'blue',\n              marginRight: 25\n            },\n            children: \"Recall Liquidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You RDLP Token: \", userRDLPBal]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: listInputRemoveLiquidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: 30,\n            width: 60,\n            marginTop: 20\n          },\n          type: \"button\",\n          onClick: removeLiquidity,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Recall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: 200,\n        padding: 50,\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'row',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'blue',\n            marginRight: 20\n          },\n          children: \"Mint 1000 RDX for test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: 25,\n            width: 60\n          },\n          type: \"button\",\n          onClick: mintRDX,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"mint \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your RDX Balance: \", userRDXBal, \" RDX\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'row',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'blue',\n            marginRight: 20\n          },\n          children: \"Mint 1000 WJK for test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: 25,\n            width: 60\n          },\n          type: \"button\",\n          onClick: mintWJK,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"mint \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your WJK Balance: \", userWJKBal, \" WJK\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XGJhYaQUEVaoem/RFCKXJ0eZ6q8=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useWeb3React","Injected","getContract","PoolPair","parseUnits","require","App","addLiquidityInput","listInputAddLiquidity","map","e","labelName","display","flexDirection","marginRight","width","console","log","target","value","removeLiquidityInput","listInputRemoveLiquidity","userAccount","setUserAccount","userRDXBal","setUserRDXBal","userWJKBal","setUserWJKBal","userRDLPBal","setRDLPBal","activate","account","connectWallet","mintRDX","contract","mint","alert","wait","getRDXBal","error","mintWJK","getWJKBal","bal","parseInt","balanceOf","getRDLPBal","getRDXAllowance","allowance","contractAddress","getWJKAllowance","rdxExpect","setRdxExpect","wjkExpect","setWjkExpect","rdxMin","setRdxMin","wjkMin","setWjkMin","addLiquidity","removeLiquidity","window","localStorage","getItem","setItem","padding","minHeight","flex","justifyContent","alignItems","color","height","marginTop"],"sources":["/Users/damquocdung/Desktop/rdxSwap_main/rdxswap_web/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { useWeb3React } from '@web3-react/core'\nimport { Injected } from './connectors'\nimport { getContract } from './utils/getContract'\nimport { PoolPair } from './utils/constant';\nconst { parseUnits } = require(\"ethers/lib/utils\");\n\n\nfunction App() {\n  const addLiquidityInput = ['rdxExpect', 'wjkExpect', 'rdxMin', 'wjkMin']\n  const listInputAddLiquidity = addLiquidityInput.map(e => {\n    let labelName = e === 'rdxExpect' ? 'RDX expect' : e === 'wjkExpect' ? 'WJK expect' :\n      e === 'rdxMin' ? 'RDX min' : e === 'wjkMin' ? 'WJK Min' : ''\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <p>{labelName}</p>\n        <input style={{ marginRight: 10, width: 100 }} type='number' onChange={(e) => console.log(e.target.value)} />\n      </div>\n    )\n  })\n  const removeLiquidityInput = ['lpBurn', 'rdxOutMin', 'wjkOutMin']\n  const listInputRemoveLiquidity = removeLiquidityInput.map(e => {\n    let labelName = e === 'lpBurn' ? 'LP amount' : e === 'rdxOutMin' ? 'RDX min back' : e === 'wjkOutMin' ? 'WJK min back' : ''\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <p>{labelName}</p>\n        <input style={{ marginRight: 10, width: 100 }} type='number' onChange={(e) => console.log(e.target.value)} />\n      </div>\n    )\n  })\n  let [userAccount, setUserAccount] = useState<any>('')\n  let [userRDXBal, setUserRDXBal] = useState<any>(0)\n  let [userWJKBal, setUserWJKBal] = useState<any>(0)\n  let [userRDLPBal, setRDLPBal] = useState<any>(0)\n  // let [rdxAllowance, setRdxAllowance] = useState<any>(0)\n  // let [wjkAllowance, setWjkAllowance] = useState<any>(0)\n\n  const { activate, account } = useWeb3React();\n  const connectWallet = async () => {\n    await activate(Injected)\n  }\n  const mintRDX = async () => {\n    const contract = await getContract('RDX')\n    if (contract != null) {\n      try {\n        const mint = await contract.mint()\n        alert('mint RDX successs wait for 30 second to see balance update')\n        await mint.wait()\n        await getRDXBal()\n      } catch (error) {\n        alert('mint RDX cause crash by system')\n      }\n    } else alert('get RDX contract failed')\n  }\n\n  const mintWJK = async () => {\n    const contract = await getContract('WJK')\n    if (contract != null) {\n      try {\n        const mint = await contract.mint()\n        alert('mint WJK success wait for 30 second to see balance update')\n        await mint.wait()\n        await getWJKBal()\n      } catch (error) {\n        alert('mint WJK cause crash by system')\n      }\n    } else alert('get WJK contract failed')\n\n  }\n\n  const getRDXBal = async () => {\n    const contract = await getContract('RDX')\n    if (contract != null) {\n      try {\n        const bal = parseInt((await contract.balanceOf(userAccount))) / 10 ** 12\n        setUserRDXBal(bal)\n      } catch (error) {\n        alert('get RDX balance cause crash by system')\n      }\n    } else alert('get RDX contract failed')\n  }\n  const getWJKBal = async () => {\n    const contract = await getContract('WJK')\n    if (contract != null) {\n      try {\n        const bal = parseInt((await contract.balanceOf(userAccount))) / 10 ** 12\n        setUserWJKBal(bal)\n      } catch (error) {\n        alert('get WJK balance cause crash by system')\n      }\n    } else alert('get WJK contract failed')\n  }\n  const getRDLPBal = async () => {\n    const contract = await getContract('POO')\n    if (contract != null) {\n      try {\n        const bal = parseInt((await contract.balanceOf(userAccount))) / 10 ** 12\n        setRDLPBal(bal)\n      } catch (error) {\n        alert('get RDLP Balance cause crash by system')\n      }\n    } else alert('get PoolPair contract failed')\n  }\n\n  const getRDXAllowance = async () => {\n    const contract = await getContract('RDX')\n    if (contract != null) {\n      try {\n        const bal = parseInt(await contract.allowance(userAccount, PoolPair.contractAddress)) / 10 ** 12\n        return bal\n        // setRdxAllowance(bal)\n      } catch (error) {\n        alert('get RDX allowance cause crash by systems')\n      }\n    } alert('get RDX contract faied')\n  }\n  const getWJKAllowance = async () => {\n    const contract = await getContract('WJK')\n    if (contract != null) {\n      try {\n        const bal = parseInt(await contract.allowance(userAccount, PoolPair.contractAddress)) / 10 ** 12\n        return bal\n        // setWjkAllowance(bal)\n      } catch (error) {\n        alert('get RDX allowance cause crash by systems')\n      }\n    } alert('get RDX contract faied')\n  }\n\n  const [rdxExpect, setRdxExpect] = useState<any>(0)\n  const [wjkExpect, setWjkExpect] = useState<any>(0)\n  const [rdxMin, setRdxMin] = useState<any>(0)\n  const [wjkMin, setWjkMin] = useState<any>(0)\n\n  const addLiquidity = async () => {\n\n  }\n  const removeLiquidity = async () => {\n\n  }\n\n  // const getUserUNIBal = async () => {\n  //   const contract = await getContract('UNI')\n  //   if (contract != null) {\n  //     try {\n  //       const balance = await contract.balanceOf(userAccount)\n  //       setUserUNIBal(parseInt(balance.toString()) / 10 ** 12)\n  //     } catch (error) {\n  //       alert('get user UNI balance cause crash by system')\n  //     }\n  //   } else alert('get UNI contract failed')\n  // }\n\n  // const getUserRDXBal = async () => {\n  //   const contract = await getContract('RDX')\n  //   if (contract != null && userAccount) {\n  //     try {\n  //       const balance = await contract.balanceOf(userAccount)\n  //       setUserRDXBal(parseInt(balance.toString()) / 10 ** 12)\n  //     } catch (error) {\n  //       alert('get user RDX balance cause crash by system')\n  //     }\n  //   } else alert('get RDX contract failed')\n  // }\n\n  // const getUniAllowBalance = async () => {\n  //   const contract = await getContract('UNI')\n  //   if (contract != null && userAccount) {\n  //     try {\n  //       const allowBalance = await contract.allowance(userAccount, MasterChef.contractAddress)\n  //       const currentBalance = await contract.balanceOf(userAccount)\n  //       const availableAmount = (currentBalance - allowBalance >= 0) ? allowBalance : currentBalance\n  //       setUniAllowBal(parseInt((availableAmount / 10 ** 12).toString()))\n  //     } catch (error) {\n  //       alert('get uni allow balance cause crash by system')\n  //     }\n  //   } else alert('get UNI contract failed')\n  // }\n\n  // const getUniDepositBalance = async () => {\n  //   const contract = await getContract('MSC')\n  //   if (contract != null) {\n  //     try {\n  //       const balance = await contract.getUserAmountDeposit('uni')\n  //       setUniBalance(parseInt(balance.toString()) / 10 ** 12)\n  //     } catch (error) {\n  //       alert('get UNI deposit balance cause crash from system')\n  //     }\n  //   } else alert('get MSC contract failed in getUniDepositBal')\n  // }\n\n  // const getRDXPending = async () => {\n  //   const contract = await getContract('MSC')\n  //   if (contract != null) {\n  //     const RDXPending = await contract.pendingRedDot('uni', userAccount)\n  //     setRDXPending(parseInt(RDXPending.toString()) / 10 ** 12)\n  //   } else alert('get MSC contract failed in getRDXPending')\n  // }\n\n  // const [uniAllowAmount, setUniAllowAmount] = useState<any>(0)\n  // const approveUni = async () => { // should require userAccount\n  //   const uniContract = await getContract('UNI')\n  //   if (uniContract != null) {\n  //     try {\n  //       const approveSuccess = await uniContract.approve(MasterChef.contractAddress, parseUnits(uniAllowAmount.toString(), 12))\n  //       await approveSuccess.wait()\n  //       if (approveSuccess) {\n  //         alert('please wait about 30-45 seconds to deposit Uni')\n  //       }\n  //     } catch (error) {\n  //       alert('approve Uni cause crash by system')\n  //     }\n  //   } else alert('get UNI contract failed')\n  // }\n\n  // const [uniDepositAmount, setUniDepositAmount] = useState<any>(0)\n  // const depositUni = async () => {\n  //   if (!userAccount) {\n  //     alert('please connect your meta mask wallet before do this stuff')\n  //     return\n  //   }\n  //   const mscContract = await getContract('MSC')\n  //   const uniContract = await getContract('UNI')\n  //   if (mscContract != null && uniContract != null) {\n  //     try {\n  //       const availableUniToDeposit = await uniContract.allowance(userAccount, MasterChef.contractAddress)\n  //       if (parseInt((availableUniToDeposit / 10 ** 12).toString()) >= uniDepositAmount) {\n  //         const tx = await mscContract.deposit('uni', parseUnits(uniDepositAmount.toString(), 12))\n  //         tx?.wait();\n  //         alert('deposit success')\n  //       } else {\n  //         alert('your balance is insufficient')\n  //       }\n  //     } catch (error) {\n  //       alert('deposit uni cause crash by system')\n  //     }\n  //   } else alert('get MSC or UNI contract failed in deposit')\n  // }\n  // const [uniWithdrawAmount, setUniWithdrawAmount] = useState<any>(0)\n  // const withdrawUni = async () => {\n  //   const mscContract = await getContract('MSC')\n  //   if (mscContract != null) {\n  //     const availableAmount = await mscContract.getUserAmountDeposit('uni')\n  //     if (uniWithdrawAmount - (parseInt(availableAmount.toString()) / 10 ** 12) <= 0) {\n  //       try {\n  //         await mscContract.withdraw('uni', parseUnits(uniWithdrawAmount.toString(), 12))\n  //         alert('withdraw success wait 45-60 seconds to receive uni')\n  //       } catch (error) {\n  //         alert('withdraw Uni cause crash by system')\n  //       }\n  //     } else {\n  //       alert('withdraw not good')\n  //     }\n  //   } else alert('get MSC contract failed in withdraw')\n  // }\n\n  // const [claimRewardAmount, setClaimRewardAmount] = useState<any>(0)\n  // const claimReward = async () => {\n  //   const mscContract = await getContract('MSC')\n  //   if (mscContract != null) {\n  //     try {\n  //       const pendingRDX = await mscContract.pendingRedDot('uni', userAccount)\n  //       let claimAmountInSol = parseUnits(claimRewardAmount.toString(), 12)\n  //       if (pendingRDX - claimAmountInSol >= 0) {\n  //         debugger\n  //         await mscContract.claimReward('uni', parseUnits(claimRewardAmount.toString(), 12))\n  //         debugger\n  //         alert('claim reward success wait 45-60 secons to receive reward')\n  //       } else {\n  //         alert('insufficinent balalnce')\n  //       }\n  //     } catch (error) {\n  //       console.log(error)\n  //       alert('claim reward cause crash by system')\n  //     }\n  //   } else alert('get MSC contract failed in claim reward')\n  // }\n\n  // const mintUni = async () => {\n  //   const uniContract = await getContract('UNI')\n  //   if (uniContract != null) {\n  //     try {\n  //       await uniContract.mint(userAccount, parseUnits('1000', 12))\n  //       alert('mint success wait for 30-45 second to get uni token')\n  //     } catch (error) {\n  //       alert('mint Uni casue crash by system')\n  //     }\n  //   } else {\n  //     alert('get uni contract failed')\n  //   }\n  // }\n\n  useEffect(() => {\n    if (userAccount) {\n      getRDXBal()\n      getWJKBal()\n      getRDLPBal()\n    }\n  }, [userAccount])\n  useEffect(() => {\n    if (account) {\n      setUserAccount(account)\n      if (window.localStorage.getItem('userAccount') !== account) {\n        window.localStorage.setItem('userAccount', account)\n      }\n    }\n  }, [account])\n  useEffect(() => {\n    if (window.localStorage.getItem('userAccount')) {\n      connectWallet()\n    }\n  }, [])\n\n  return (\n    <div style={{ padding: 20, flexDirection: 'row', display: 'flex' }}>\n      <div style={{ minHeight: 200, padding: 50, flex: 1, flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n        <div style={{ display: 'flex', flexDirection: 'column' }} >\n          <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', }}>\n            <h1 style={{ color: 'blue', marginRight: 25 }} >Add Liquidity</h1>\n\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            {listInputAddLiquidity}\n          </div>\n          <button style={{ alignItems: 'center', justifyContent: 'center', display: 'flex', height: 30, width: 60, marginTop: 20 }} type=\"button\" onClick={addLiquidity}>\n            <p>Add</p>\n          </button>\n        </div>\n        <div style={{ display: 'flex', flexDirection: 'column' }} >\n          <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', }}>\n            <h1 style={{ color: 'blue', marginRight: 25 }} >Recall Liquidity</h1>\n          </div>\n          <p>You RDLP Token: {userRDLPBal}</p>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            {listInputRemoveLiquidity}\n          </div>\n          <button style={{ alignItems: 'center', justifyContent: 'center', display: 'flex', height: 30, width: 60, marginTop: 20 }} type=\"button\" onClick={removeLiquidity}>\n            <p>Recall</p>\n          </button>\n        </div>\n      </div>\n      <div style={{ minHeight: 200, padding: 50, flex: 1, flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n        <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center' }} >\n          <h1 style={{ color: 'blue', marginRight: 20 }}>\n            Mint 1000 RDX for test\n          </h1>\n          <button style={{ alignItems: 'center', justifyContent: 'center', display: 'flex', height: 25, width: 60 }} type=\"button\" onClick={mintRDX} >\n            <p>mint </p>\n          </button>\n        </div>\n        <p>Your RDX Balance: {userRDXBal} RDX</p>\n        <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center' }} >\n          <h1 style={{ color: 'blue', marginRight: 20 }}>\n            Mint 1000 WJK for test\n          </h1>\n          <button style={{ alignItems: 'center', justifyContent: 'center', display: 'flex', height: 25, width: 60 }} type=\"button\" onClick={mintWJK} >\n            <p>mint </p>\n          </button>\n        </div>\n        <p>Your WJK Balance: {userWJKBal} WJK</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}