{"ast":null,"code":"var _jsxFileName = \"/Users/damquocdung/Desktop/masterchef_main/masterchef_web/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { useWeb3React } from '@web3-react/core';\nimport { Injected } from './connectors';\nimport { getContract } from './utils/getContract';\nimport { MasterChef } from './utils/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  parseUnits\n} = require(\"ethers/lib/utils\");\n\nfunction App() {\n  _s();\n\n  let [userAccount, setUserAccount] = useState('');\n  let [samBalance, setSamBalance] = useState(0);\n  let [samAllowBal, setSamAllowBal] = useState(0);\n  let [RDXPending, setRDXPending] = useState(0);\n  const {\n    activate,\n    account\n  } = useWeb3React();\n\n  const connectWallet = async () => {\n    await activate(Injected);\n  };\n\n  const getSamAllowBalance = async () => {\n    const contract = await getContract('SAM');\n\n    if (contract != null && userAccount) {\n      const allowBalance = await contract.allowance(userAccount, MasterChef.contractAddress);\n      const currentBalance = await contract.balanceOf(userAccount);\n      const availableAmount = allowBalance >= currentBalance ? currentBalance : allowBalance;\n      setSamAllowBal(parseInt((allowBalance / 10 ** 12).toString()));\n    }\n  };\n\n  const getSamDepositBalance = async () => {\n    const contract = await getContract('MSC');\n\n    if (contract != null) {\n      const balance = await contract.getUserAmountDeposit(1);\n      setSamBalance(parseInt(balance.toString()) / 10 ** 12);\n    } else {\n      alert('something went wrong');\n    }\n  };\n\n  const getRDXPending = async () => {\n    const contract = await getContract('MSC');\n\n    if (contract != null) {\n      const RDXPending = await contract.pendingRedDot(1, userAccount);\n      setRDXPending(parseInt(RDXPending.toString()) / 10 ** 12);\n    } else {\n      alert('something went wrong');\n    }\n  };\n\n  const [samAllowAmount, setSamAllowAmount] = useState(0);\n\n  const approveSam = async () => {\n    // should require userAccount\n    const samContract = await getContract('SAM');\n\n    if (samContract != null) {\n      const approveSuccess = await samContract.approve(MasterChef.contractAddress, parseUnits(samAllowAmount.toString(), 12));\n\n      if (approveSuccess) {\n        alert('please wait about 30-45 seconds to deposit Sam');\n      }\n    }\n  };\n\n  const [samDepositAmount, setSamDepositAmount] = useState(0);\n\n  const depositSam = async () => {\n    const mscContract = await getContract('MSC');\n    const samContract = await getContract('SAM');\n\n    if (mscContract != null && samContract != null) {\n      if (!userAccount) {\n        alert('please connect your meta mask wallet before do this stuff');\n        return;\n      } // let balInPool = await mscContract.getUserAmountDeposit(1)\n      // // balInPool = parseInt(balInPool.toString()) / 10 ** 12\n      // let balInHand = await samContract.balanceOf(userAccount)\n      // // balInHand = parseInt(balInHand.toString()) / 10 ** 12\n      // let balInChef = await samContract.balanceOf(MasterChef.contractAddress)\n      // // balInChef = parseInt(balInChef.toString()) /10 ** 12\n      // let balInAllow = await samContract.allowance(userAccount, MasterChef.contractAddress)\n      // console.log('sam in hand', balInHand)\n      // console.log('sam in pool', balInPool)\n      // console.log('sam in chef', balInChef)\n      // console.log('sam in allow', balInAllow)\n\n\n      const availableSamToDeposit = await samContract.allowance(userAccount, MasterChef.contractAddress);\n\n      if (parseInt((availableSamToDeposit / 10 ** 12).toString()) > samDepositAmount) {\n        await mscContract.deposit(1, parseUnits(samDepositAmount.toString(), 12));\n        alert('deposit success');\n      } else {\n        alert('your balance is insufficient');\n      }\n    }\n  };\n\n  const [samWithdrawAmount, setSamWithdrawAmount] = useState(0);\n\n  const withdrawSam = async () => {\n    const mscContract = await getContract('MSC');\n\n    if (mscContract != null) {\n      const availableAmount = await mscContract.getUserAmountDeposit(1);\n\n      if (samWithdrawAmount <= parseInt(availableAmount.toString()) / 10 ** 12) {\n        await mscContract.withdraw(1, parseUnits(samWithdrawAmount.toString(), 12));\n        alert('withdraw success wait 45-60 seconds to receive sam');\n      } else {\n        alert('withdraw not good');\n      }\n    }\n  };\n\n  const [claimRewardAmount, setClaimRewardAmount] = useState(0);\n\n  const claimReward = async () => {\n    const mscContract = await getContract('MSC');\n\n    if (mscContract != null) {\n      const pendingRDX = await mscContract.pendingRedDot(1, userAccount);\n      let claimAmountInSol = parseUnits(claimRewardAmount.toString(), 12);\n\n      if (claimAmountInSol > pendingRDX) {\n        await mscContract.claimReward(1, parseUnits(claimRewardAmount.toString(), 12));\n        alert('claim reward success wait 45-60 secons to receive reward');\n      } else {\n        alert('insufficinent balalnce');\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (userAccount) {\n      getSamDepositBalance();\n      getSamAllowBalance();\n      getRDXPending();\n    }\n  }, [userAccount]);\n  useEffect(() => {\n    if (account) {\n      setUserAccount(account);\n    }\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        minHeight: 200,\n        padding: 50,\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'blue'\n        },\n        children: \"collect RDX by staking SAM Coin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", userAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: connectWallet,\n        style: {\n          marginTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          justifyContent: 'flex-start',\n          width: '40%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Approve some Sam to deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginRight: 10\n          },\n          type: \"number\",\n          onChange: e => setSamAllowAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: approveSam,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Sam available to deposit:\", samAllowBal, \" SAM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          justifyContent: 'flex-start',\n          width: '40%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Deposit Sam:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginRight: 10\n          },\n          type: \"number\",\n          onChange: e => setSamDepositAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: depositSam,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          justifyContent: 'flex-start',\n          width: '40%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Withdraw Sam:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginRight: 10\n          },\n          type: \"number\",\n          onChange: e => setSamWithdrawAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: withdrawSam,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your balance Sam in Pool: \", samBalance, \" SAM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start',\n          justifyContent: 'flex-start',\n          width: '40%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" claim reward (make sure your balance is sufficient): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginRight: 10\n          },\n          type: \"number\",\n          onChange: e => setClaimRewardAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: claimReward,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your Pending Reddot token reward: \", RDXPending, \" RDX\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JM68HzHDIy6cWnDdBJFpiBOtFmc=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useWeb3React","Injected","getContract","MasterChef","parseUnits","require","App","userAccount","setUserAccount","samBalance","setSamBalance","samAllowBal","setSamAllowBal","RDXPending","setRDXPending","activate","account","connectWallet","getSamAllowBalance","contract","allowBalance","allowance","contractAddress","currentBalance","balanceOf","availableAmount","parseInt","toString","getSamDepositBalance","balance","getUserAmountDeposit","alert","getRDXPending","pendingRedDot","samAllowAmount","setSamAllowAmount","approveSam","samContract","approveSuccess","approve","samDepositAmount","setSamDepositAmount","depositSam","mscContract","availableSamToDeposit","deposit","samWithdrawAmount","setSamWithdrawAmount","withdrawSam","withdraw","claimRewardAmount","setClaimRewardAmount","claimReward","pendingRDX","claimAmountInSol","padding","minHeight","flex","flexDirection","justifyContent","alignItems","color","marginTop","width","marginRight","e","target","value"],"sources":["/Users/damquocdung/Desktop/masterchef_main/masterchef_web/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { useWeb3React } from '@web3-react/core'\nimport { Injected } from './connectors'\nimport { getContract } from './utils/getContract'\nimport { MasterChef, ScamCoin, RedDotToken, } from './utils/constant'\nconst { parseUnits } = require(\"ethers/lib/utils\");\n\n\nfunction App() {\n  let [userAccount, setUserAccount] = useState<any>('')\n  let [samBalance, setSamBalance] = useState<any>(0)\n  let [samAllowBal, setSamAllowBal] = useState<any>(0)\n  let [RDXPending, setRDXPending] = useState<any>(0)\n\n  const { activate, account } = useWeb3React();\n  const connectWallet = async () => {\n    await activate(Injected)\n  }\n\n  const getSamAllowBalance = async () => {\n    const contract = await getContract('SAM')\n    if (contract != null && userAccount) {\n      const allowBalance = await contract.allowance(userAccount, MasterChef.contractAddress)\n      const currentBalance = await contract.balanceOf(userAccount)\n      const availableAmount = allowBalance >= currentBalance ? currentBalance : allowBalance\n      setSamAllowBal(parseInt((allowBalance / 10 ** 12).toString()))\n    }\n  }\n\n  const getSamDepositBalance = async () => {\n    const contract = await getContract('MSC')\n    if (contract != null) {\n      const balance = await contract.getUserAmountDeposit(1)\n      setSamBalance(parseInt(balance.toString()) / 10 ** 12)\n    } else {\n      alert('something went wrong')\n    }\n  }\n\n  const getRDXPending = async () => {\n    const contract = await getContract('MSC')\n    if (contract != null) {\n      const RDXPending = await contract.pendingRedDot(1, userAccount)\n      setRDXPending(parseInt(RDXPending.toString()) / 10 ** 12)\n    } else {\n      alert('something went wrong')\n    }\n  }\n\n  const [samAllowAmount, setSamAllowAmount] = useState<any>(0)\n  const approveSam = async () => { // should require userAccount\n    const samContract = await getContract('SAM')\n    if (samContract != null) {\n      const approveSuccess = await samContract.approve(MasterChef.contractAddress, parseUnits(samAllowAmount.toString(), 12))\n      if (approveSuccess) {\n        alert('please wait about 30-45 seconds to deposit Sam')\n      }\n    }\n  }\n  const [samDepositAmount, setSamDepositAmount] = useState<any>(0)\n  const depositSam = async () => {\n    const mscContract = await getContract('MSC')\n    const samContract = await getContract('SAM')\n    if (mscContract != null && samContract != null) {\n      if (!userAccount) {\n        alert('please connect your meta mask wallet before do this stuff')\n        return\n      }\n      // let balInPool = await mscContract.getUserAmountDeposit(1)\n      // // balInPool = parseInt(balInPool.toString()) / 10 ** 12\n\n      // let balInHand = await samContract.balanceOf(userAccount)\n      // // balInHand = parseInt(balInHand.toString()) / 10 ** 12\n\n      // let balInChef = await samContract.balanceOf(MasterChef.contractAddress)\n      // // balInChef = parseInt(balInChef.toString()) /10 ** 12\n\n      // let balInAllow = await samContract.allowance(userAccount, MasterChef.contractAddress)\n      // console.log('sam in hand', balInHand)\n      // console.log('sam in pool', balInPool)\n      // console.log('sam in chef', balInChef)\n      // console.log('sam in allow', balInAllow)\n      const availableSamToDeposit = await samContract.allowance(userAccount, MasterChef.contractAddress)\n      if (parseInt((availableSamToDeposit / 10 ** 12).toString()) > samDepositAmount) {\n        await mscContract.deposit(1, parseUnits(samDepositAmount.toString(), 12))\n        alert('deposit success')\n      } else {\n        alert('your balance is insufficient')\n      }\n    }\n  }\n  const [samWithdrawAmount, setSamWithdrawAmount] = useState<any>(0)\n  const withdrawSam = async () => {\n    const mscContract = await getContract('MSC')\n    if (mscContract != null) {\n      const availableAmount = await mscContract.getUserAmountDeposit(1)\n      if (samWithdrawAmount <= (parseInt(availableAmount.toString()) / 10 ** 12)) {\n        await mscContract.withdraw(1, parseUnits(samWithdrawAmount.toString(), 12))\n        alert('withdraw success wait 45-60 seconds to receive sam')\n      } else {\n        alert('withdraw not good')\n      }\n    }\n  }\n  const [claimRewardAmount, setClaimRewardAmount] = useState<any>(0)\n  const claimReward = async () => {\n    const mscContract = await getContract('MSC')\n    if (mscContract != null) {\n      const pendingRDX = await mscContract.pendingRedDot(1, userAccount)\n      let claimAmountInSol = parseUnits(claimRewardAmount.toString(), 12)\n      if (claimAmountInSol > pendingRDX) {\n        await mscContract.claimReward(1, parseUnits(claimRewardAmount.toString(), 12))\n        alert('claim reward success wait 45-60 secons to receive reward')\n      } else {\n        alert('insufficinent balalnce')\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (userAccount) {\n      getSamDepositBalance()\n      getSamAllowBalance()\n      getRDXPending()\n    }\n  }, [userAccount])\n  useEffect(() => {\n    if (account) {\n      setUserAccount(account)\n    }\n  }, [account])\n\n  return (\n    <div style={{ padding: 20 }}>\n      <main style={{ minHeight: 200, padding: 50, flex: 1, flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n        <h1 style={{ color: 'blue' }}>\n          collect RDX by staking SAM Coin\n        </h1>\n        <p>\n          Your account: {userAccount}\n        </p>\n\n        <button type=\"button\" onClick={connectWallet} style={{ marginTop: 20 }} >\n          <p>\n            Connect Wallet\n          </p>\n        </button>\n\n        <div style={{ flexDirection: 'row', alignItems: 'flex-start', justifyContent: 'flex-start', width: '40%' }}>\n          <p> Approve some Sam to deposit</p>\n          <input style={{ marginRight: 10 }} type='number' onChange={(e) => setSamAllowAmount(e.target.value)} />\n          <button type=\"button\" onClick={approveSam} >\n            <p>Submit</p>\n          </button>\n          <h3>Sam available to deposit:{samAllowBal} SAM</h3>\n        </div>\n        <div style={{ flexDirection: 'row', alignItems: 'flex-start', justifyContent: 'flex-start', width: '40%' }}>\n          <p > Deposit Sam:</p>\n          <input style={{ marginRight: 10 }} type='number' onChange={(e) => setSamDepositAmount(e.target.value)} />\n          <button type=\"button\" onClick={depositSam} >\n            <p>Submit</p>\n          </button>\n        </div>\n        <div style={{ flexDirection: 'row', alignItems: 'flex-start', justifyContent: 'flex-start', width: '40%' }}>\n          <p > Withdraw Sam:</p>\n          <input style={{ marginRight: 10 }} type='number' onChange={(e) => setSamWithdrawAmount(e.target.value)} />\n          <button type=\"button\" onClick={withdrawSam} >\n            <p>Submit</p>\n          </button>\n          <h3>Your balance Sam in Pool: {samBalance} SAM</h3>\n        </div>\n\n\n        <div style={{ flexDirection: 'row', alignItems: 'flex-start', justifyContent: 'flex-start', width: '40%' }}>\n          <p > claim reward (make sure your balance is sufficient): </p>\n          <input style={{ marginRight: 10 }} type='number' onChange={(e) => setClaimRewardAmount(e.target.value)} />\n          <button type=\"button\" onClick={claimReward} >\n            <p>Submit</p>\n          </button>\n          <h3>\n            Your Pending Reddot token reward: {RDXPending} RDX\n          </h3>\n        </div>\n      </main>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}